---
title: "The Office!"
format:
  html:
    code-fold: true
    code-tools: true
---

```{r setup, include=FALSE}
suppressPackageStartupMessages({
  library(dplyr)
  library(readr)
  library(tidyverse)
  library(stringr)
})

```

The source of this code is from the Kaggle website showcasing every quote from every season of The Office, acquired by <https://www.kaggle.com/datasets/fabriziocominetti/the-office-lines>.

This first line of code visualizes what word comes up the most after a character in The Office says 'hey'! To create the first graph, I filtered each line for the word "hey" and extracted the word immediately following it using a regular expression. I then grouped those words to count how often each came after "hey" and visualized the top 10. It makes sense that after hey the most common word said is guys, probably Michael coming in to annoy everyone in the workplace!

```{r, echo=FALSE, warning=FALSE, message=FALSE, error=FALSE, #| fig.alt: "Horizontal bar chart displaying the most common words that appear  after 'hey' in lines from The Office. 'guys' is the most frequent, followed by several names or common greetings."}

office_lines <- read_csv('the-office_lines.csv', show_col_types = FALSE)

office_lines <- office_lines %>%
  mutate(lower_line = str_to_lower(Line),
         after_hey = str_extract(lower_line, "(?<=\\bhey )\\w+"))  

hey_counts <- office_lines %>%
  filter(!is.na(after_hey) & after_hey != "") %>%
  group_by(after_hey) %>%
  summarise(count = n()) %>%
  arrange(desc(count)) %>%  
  head(10)

ggplot(hey_counts, aes(x = reorder(after_hey, count), y = count, fill = after_hey)) +
  geom_col(show.legend = FALSE) +
  labs(
    title = "Most Common Names After 'Hey' in The Office",
    x = "Name",
    y = "Count"
  ) +
  coord_flip() 

```

I thought I was on to something with this idea, thinking there would be some clear distinctions with this question. For this graph, I calculated the number of characters in each line and then averaged those values by character name. . The character unsurprisingly with the longest character lines is Michael, which makes sense since he would have a lot of funny monologues that contributed a lot to his development as a character and a manager. David Brent is in the UK version of The Office which I had to look up, but would also make sense that he is the second character. The other characters have more on par average line lengths, so this seems like the longer the character lines are is due to some sort of promotional / special event occurring in the episode rather than regular dialogue.

```{r, echo= FALSE, warning=FALSE, message=FALSE, error=FALSE, fig.alt: "Horizontal bar chart visualizing the top 10 characters in The Office with the longest average line lengths. Michael is the highest one who ranks, so he speaks in longer sentences."}
office_lines <- office_lines %>%
  mutate(Character = str_trim(str_to_title(Character)),  
         line_length = str_length(Line)) 

talkative_characters <- office_lines %>%
  group_by(Character) %>%
  summarise(total_lines = n(),  
            avg_line_length = mean(line_length, na.rm = TRUE)) %>%
  arrange(desc(avg_line_length)) %>%
  head(10)

ggplot(talkative_characters, aes(x = reorder(Character, avg_line_length), y = avg_line_length, fill = Character)) +
  geom_col(show.legend = FALSE) +
  labs(
    title = "Characters Who Speak in the Longest Sentences",
    x = "Character",
    y = "Average Line Length (Characters)"
  ) +
  coord_flip()

```

This one I could have easily predicted! I feel like I can always hear Michael's voice in the back of my head, answering some sort of questions. This chart is based on detecting whether a line ends with a question mark. I used a regular expression to determine the lines and then grouped them by the character, and counted the number of questions by each character. Jim comes to a near second, which is not something I expected in this dataset.

```{r, echo=FALSE, warning=FALSE, message=FALSE, error=FALSE, fig.alt: "Horizontal bar chart showing the top 10 characters in The Office who ask the most questions. Michael is the character with the most  questions asked, with Jim and Dwight following."}

office_lines <- office_lines %>%
  mutate(is_question = str_detect(Line, "\\?$")) 

question_askers <- office_lines %>%
  filter(is_question) %>%
  group_by(Character) %>%
  summarise(question_count = n()) %>%
  arrange(desc(question_count)) %>% 
  head(10) 

ggplot(question_askers, aes(x = reorder(Character, question_count), y = question_count, fill = Character)) +
  geom_col(show.legend = FALSE) +
  labs(
    title = "Who Asks the Most Questions?",
    x = "Character",
    y = "Number of Questions Asked"
  ) +
  coord_flip()  

```

Here, I used a regular expression to detect lines ending in an exclamation mark. Michael again here yells so much! It seems like he may be the main character after all... Lol

But Dwight comes to a close second. This is really interesting to me that they come so close, but they did clash with a lot of characters.

```{r, echo=FALSE, warning=FALSE, message=FALSE, error=FALSE, fig.alt:Horizontal bar chart showing the top 10 characters in The Office with the most exclamatory lines, based on lines ending with an exclamation mark. Michael appears at the top, followed by other energetic characters." }
office_lines <- office_lines %>%
  mutate(is_exclamation = str_detect(Line, "\\!$"))

exclaimers <- office_lines %>%
  filter(is_exclamation) %>%
  group_by(Character) %>%
  summarise(exclaim_count = n()) %>%
  arrange(desc(exclaim_count)) %>%
  head(10)

ggplot(exclaimers, aes(x = reorder(Character, exclaim_count), y = exclaim_count, fill = Character)) +
  geom_col(show.legend = FALSE) +
  labs(
    title = "Who Yells the Most?",
    x = "Character",
    y = "Number of Exclamatory Lines"
  ) +
  coord_flip()

```

Thanks for reading prof!
